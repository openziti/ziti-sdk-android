/*
 * Copyright (c) 2018-2021 NetFoundry, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.github.kezong:fat-aar:1.3.8'
    }
}

plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'org.jetbrains.dokka'
    id 'maven-publish'
}

apply plugin: 'com.kezong.fat-aar'

ext {
    description "Ziti SDK for Android"
}

android {
    compileSdkVersion 31
    ndkVersion "21.3.6528147"

    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 31
        versionCode 1

        buildConfigField "String", "GIT_COMMIT", "\"${semver.info.shortCommit}\""
        buildConfigField "String", "GIT_BRANCH", "\"${semver.info.branch.id}\""
        buildConfigField "String", "ZITI_VERSION", "\"${project.version}\""

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        consumerProguardFiles 'consumer-rules.pro'
    }

    compileOptions {
        targetCompatibility = "8"
        sourceCompatibility = "8"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}


repositories {
    google()
    mavenCentral()
}

dependencies {
    api(project(':ziti')){
        exclude module:"lazysodium-java"
        exclude module:"jna"
    }
    embed("com.goterl:lazysodium-android:${versions.lazysodiumAndroid}@aar")
    embed('net.java.dev.jna:jna:5.12.1@aar')

    implementation deps.kotlin
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}"
    implementation "androidx.core:core-ktx:${versions.androidxCore}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.androidxLifecycle}"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${versions.androidxLifecycle}"

    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.1.0'

    testImplementation deps.jupiterApi
    testImplementation deps.jupiter
    androidTestImplementation('com.squareup.retrofit2:retrofit:2.9.0')
    androidTestImplementation('com.squareup.retrofit2:converter-gson:2.9.0')

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

}


tasks.register('sourceJar', Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

tasks.register('dokkaJar', Jar) {
    classifier('javadoc')
    from dokkaJavadoc.outputDirectory
}

afterEvaluate {
    publishing {
        publications {
            zitiAndroid(MavenPublication) {
                groupId = project.group
                version = project.version
                from components.release
                artifact sourceJar
                artifact dokkaJar
            }
        }
    }

    apply from: rootProject.file('publish.gradle')
}
